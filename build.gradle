plugins{
    id "java"
    id "com.github.GlennFolker.EntityAnno" version "$entVersion" apply true
    id "com.github.nekit508.mindustry-mod-plugin" version "$nmpVersion" apply true
}

ext {
    compilerVersion = JavaVersion.current().ordinal() - JavaVersion.VERSION_17.ordinal() + 17
    useJitpack = Boolean.valueOf(mindustryBE)
}

repositories{
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }

    if(!useJitpack) maven { url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven {url 'https://jitpack.io'}
}

sourceSets.main.java.srcDirs = [layout.projectDirectory.dir("src"), layout.projectDirectory.dir("gen")]
sourceSets.main.resources.srcDirs = [layout.projectDirectory.dir("res")]

configurations.configureEach {
    resolutionStrategy.eachDependency {
        if (useJitpack && requested.group == "com.github.Anuken.Mindustry")
            useTarget "com.github.Anuken.MindustryJitpack:$it.requested.name:$mindustryBEVersion"

        if (requested.group == "com.github.Anuken.Arc")
            useVersion arcVersion
    }
}

entityAnno {
    modName = property("modName")
    mindustryVersion = property(useJitpack ? "mindustryBEVersion" : "mindustryVersion")
    isJitpack = useJitpack
    revisionDir = layout.projectDirectory.dir("revisions").asFile
    fetchPackage = modFetch
    genSrcPackage = modGenSrc
    genPackage = modGen
}

nmp {
    mindutsryVersion = property(useJitpack ? "mindustryBEVersion" : "mindustryVersion")

    parseSettings()
    configureCompileTask()
    initTasks()
    enableLegacy()
}

dependencies {
    compileOnly "com.github.GlennFolker.EntityAnno:entity:$entVersion"
    kapt "com.github.GlennFolker.EntityAnno:entity:$entVersion"

    compileOnly nmp.mindustryDependency("core")

    compileOnly nmp.arcDependency("arc-core")
    compileOnly nmp.arcDependency("discord")
    compileOnly nmp.arcDependency("backend-sdl")

    implementation "com.github.liplum:MultiCrafterLib:v1.8"

    annotationProcessor "com.github.GlennFolker.EntityAnno:downgrader:$entVersion"
}

tasks.nmpBuild {
    from configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}

    from layout.projectDirectory.file("icon.png")

    from layout.projectDirectory.file("$temporaryDir/mod.json")

    metaInf.from layout.projectDirectory.file("LICENSE")
}

tasks.nmpBuildRelease {
    archiveFile.set(project.layout.buildDirectory.file("libs/${modArtifact}.jar"))
}